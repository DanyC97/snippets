{
  "attributes": {
    "zmax": {
      "valType": "number", 
      "role": "info", 
      "description": "Sets the upper bound of color domain.", 
      "dflt": null
    }, 
    "uid": {
      "valType": "string", 
      "role": "info", 
      "dflt": ""
    }, 
    "stream": {
      "maxpoints": {
        "valType": "number", 
        "role": "info", 
        "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.", 
        "min": 0
      }, 
      "role": "object", 
      "token": {
        "strict": true, 
        "valType": "string", 
        "role": "info", 
        "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.", 
        "noBlank": true
      }
    }, 
    "zsrc": {
      "valType": "string", 
      "role": "info", 
      "description": "Sets the source reference on plot.ly for  z ."
    }, 
    "text": {
      "valType": "data_array", 
      "role": "data", 
      "description": "Sets the text elements associated with each location."
    }, 
    "zmin": {
      "valType": "number", 
      "role": "info", 
      "description": "Sets the lower bound of color domain.", 
      "dflt": null
    }, 
    "locations": {
      "valType": "data_array", 
      "role": "data", 
      "description": "Sets the coordinates via location IDs or names. See `locationmode` for more info."
    }, 
    "textsrc": {
      "valType": "string", 
      "role": "info", 
      "description": "Sets the source reference on plot.ly for  text ."
    }, 
    "visible": {
      "values": [
        true, 
        false, 
        "legendonly"
      ], 
      "valType": "enumerated", 
      "role": "info", 
      "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).", 
      "dflt": true
    }, 
    "marker": {
      "line": {
        "color": {
          "valType": "color", 
          "arrayOk": true, 
          "role": "style", 
          "description": "Sets the marker.line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."
        }, 
        "colorsrc": {
          "valType": "string", 
          "role": "info", 
          "description": "Sets the source reference on plot.ly for  color ."
        }, 
        "role": "object", 
        "widthsrc": {
          "valType": "string", 
          "role": "info", 
          "description": "Sets the source reference on plot.ly for  width ."
        }, 
        "width": {
          "valType": "number", 
          "arrayOk": true, 
          "role": "style", 
          "description": "Sets the width (in px) of the lines bounding the marker points.", 
          "min": 0
        }
      }, 
      "role": "object"
    }, 
    "colorbar": {
      "yanchor": {
        "values": [
          "top", 
          "middle", 
          "bottom"
        ], 
        "valType": "enumerated", 
        "role": "style", 
        "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.", 
        "dflt": "middle"
      }, 
      "showexponent": {
        "values": [
          "all", 
          "first", 
          "last", 
          "none"
        ], 
        "valType": "enumerated", 
        "role": "style", 
        "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.", 
        "dflt": "all"
      }, 
      "showticklabels": {
        "valType": "boolean", 
        "role": "style", 
        "description": "Determines whether or not the tick labels are drawn.", 
        "dflt": true
      }, 
      "lenmode": {
        "values": [
          "fraction", 
          "pixels"
        ], 
        "valType": "enumerated", 
        "role": "info", 
        "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.", 
        "dflt": "fraction"
      }, 
      "showticksuffix": {
        "values": [
          "all", 
          "first", 
          "last", 
          "none"
        ], 
        "valType": "enumerated", 
        "role": "style", 
        "description": "Same as `showtickprefix` but for tick suffixes.", 
        "dflt": "all"
      }, 
      "titlefont": {
        "color": {
          "valType": "color", 
          "role": "style"
        }, 
        "role": "object", 
        "description": "Sets this color bar's title font.", 
        "family": {
          "strict": true, 
          "valType": "string", 
          "role": "style", 
          "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.", 
          "noBlank": true
        }, 
        "size": {
          "valType": "number", 
          "role": "style", 
          "min": 1
        }
      }, 
      "borderwidth": {
        "valType": "number", 
        "role": "style", 
        "description": "Sets the width (in px) or the border enclosing this color bar.", 
        "dflt": 0, 
        "min": 0
      }, 
      "tickvalssrc": {
        "valType": "string", 
        "role": "info", 
        "description": "Sets the source reference on plot.ly for  tickvals ."
      }, 
      "showtickprefix": {
        "values": [
          "all", 
          "first", 
          "last", 
          "none"
        ], 
        "valType": "enumerated", 
        "role": "style", 
        "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.", 
        "dflt": "all"
      }, 
      "nticks": {
        "valType": "integer", 
        "role": "style", 
        "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*.", 
        "dflt": 0, 
        "min": 0
      }, 
      "titleside": {
        "values": [
          "right", 
          "top", 
          "bottom"
        ], 
        "valType": "enumerated", 
        "role": "style", 
        "description": "Determines the location of the colorbar title with respect to the color bar.", 
        "dflt": "top"
      }, 
      "outlinecolor": {
        "valType": "color", 
        "role": "style", 
        "description": "Sets the axis line color.", 
        "dflt": "#444"
      }, 
      "tickprefix": {
        "valType": "string", 
        "role": "style", 
        "description": "Sets a tick label prefix.", 
        "dflt": ""
      }, 
      "tickformat": {
        "valType": "string", 
        "role": "style", 
        "description": "Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.", 
        "dflt": ""
      }, 
      "tickmode": {
        "values": [
          "auto", 
          "linear", 
          "array"
        ], 
        "valType": "enumerated", 
        "role": "info", 
        "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."
      }, 
      "title": {
        "valType": "string", 
        "role": "info", 
        "description": "Sets the title of the color bar.", 
        "dflt": "Click to enter colorscale title"
      }, 
      "ticks": {
        "values": [
          "outside", 
          "inside", 
          ""
        ], 
        "valType": "enumerated", 
        "role": "style", 
        "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines.", 
        "dflt": ""
      }, 
      "thickness": {
        "valType": "number", 
        "role": "style", 
        "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.", 
        "dflt": 30, 
        "min": 0
      }, 
      "bgcolor": {
        "valType": "color", 
        "role": "style", 
        "description": "Sets the color of padded area.", 
        "dflt": "rgba(0,0,0,0)"
      }, 
      "role": "object", 
      "outlinewidth": {
        "valType": "number", 
        "role": "style", 
        "description": "Sets the width (in px) of the axis line.", 
        "dflt": 1, 
        "min": 0
      }, 
      "ticktextsrc": {
        "valType": "string", 
        "role": "info", 
        "description": "Sets the source reference on plot.ly for  ticktext ."
      }, 
      "bordercolor": {
        "valType": "color", 
        "role": "style", 
        "description": "Sets the axis line color.", 
        "dflt": "#444"
      }, 
      "xanchor": {
        "values": [
          "left", 
          "center", 
          "right"
        ], 
        "valType": "enumerated", 
        "role": "style", 
        "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.", 
        "dflt": "left"
      }, 
      "ticklen": {
        "valType": "number", 
        "role": "style", 
        "description": "Sets the tick length (in px).", 
        "dflt": 5, 
        "min": 0
      }, 
      "len": {
        "valType": "number", 
        "role": "style", 
        "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.", 
        "dflt": 1, 
        "min": 0
      }, 
      "ticksuffix": {
        "valType": "string", 
        "role": "style", 
        "description": "Sets a tick label suffix.", 
        "dflt": ""
      }, 
      "x": {
        "description": "Sets the x position of the color bar (in plot fraction).", 
        "dflt": 1.02, 
        "min": -2, 
        "max": 3, 
        "role": "style", 
        "valType": "number"
      }, 
      "ticktext": {
        "valType": "data_array", 
        "role": "data", 
        "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."
      }, 
      "xpad": {
        "valType": "number", 
        "role": "style", 
        "description": "Sets the amount of padding (in px) along the x direction.", 
        "dflt": 10, 
        "min": 0
      }, 
      "tickvals": {
        "valType": "data_array", 
        "role": "data", 
        "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."
      }, 
      "tickfont": {
        "color": {
          "valType": "color", 
          "role": "style"
        }, 
        "role": "object", 
        "description": "Sets the tick font.", 
        "family": {
          "strict": true, 
          "valType": "string", 
          "role": "style", 
          "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.", 
          "noBlank": true
        }, 
        "size": {
          "valType": "number", 
          "role": "style", 
          "min": 1
        }
      }, 
      "tickwidth": {
        "valType": "number", 
        "role": "style", 
        "description": "Sets the tick width (in px).", 
        "dflt": 1, 
        "min": 0
      }, 
      "tick0": {
        "valType": "number", 
        "role": "style", 
        "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.", 
        "dflt": 0
      }, 
      "tickangle": {
        "valType": "angle", 
        "role": "style", 
        "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.", 
        "dflt": "auto"
      }, 
      "dtick": {
        "valType": "any", 
        "role": "style", 
        "description": "Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.", 
        "dflt": 1
      }, 
      "ypad": {
        "valType": "number", 
        "role": "style", 
        "description": "Sets the amount of padding (in px) along the y direction.", 
        "dflt": 10, 
        "min": 0
      }, 
      "exponentformat": {
        "values": [
          "none", 
          "e", 
          "E", 
          "power", 
          "SI", 
          "B"
        ], 
        "valType": "enumerated", 
        "role": "style", 
        "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.", 
        "dflt": "B"
      }, 
      "y": {
        "description": "Sets the y position of the color bar (in plot fraction).", 
        "dflt": 0.5, 
        "min": -2, 
        "max": 3, 
        "role": "style", 
        "valType": "number"
      }, 
      "tickcolor": {
        "valType": "color", 
        "role": "style", 
        "description": "Sets the tick color.", 
        "dflt": "#444"
      }, 
      "thicknessmode": {
        "values": [
          "fraction", 
          "pixels"
        ], 
        "valType": "enumerated", 
        "role": "style", 
        "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.", 
        "dflt": "pixels"
      }
    }, 
    "autocolorscale": {
      "valType": "boolean", 
      "role": "style", 
      "description": "Determines whether or not the colorscale is picked using the sign of the input z values.", 
      "dflt": true
    }, 
    "type": "choropleth", 
    "opacity": {
      "description": "Sets the opacity of the trace.", 
      "dflt": 1, 
      "min": 0, 
      "max": 1, 
      "role": "style", 
      "valType": "number"
    }, 
    "locationssrc": {
      "valType": "string", 
      "role": "info", 
      "description": "Sets the source reference on plot.ly for  locations ."
    }, 
    "legendgroup": {
      "valType": "string", 
      "role": "info", 
      "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.", 
      "dflt": ""
    }, 
    "showlegend": {
      "valType": "boolean", 
      "role": "info", 
      "description": "Determines whether or not an item corresponding to this trace is shown in the legend.", 
      "dflt": true
    }, 
    "showscale": {
      "valType": "boolean", 
      "role": "info", 
      "description": "Determines whether or not a colorbar is displayed for this trace.", 
      "dflt": true
    }, 
    "hoverinfo": {
      "description": "Determines which trace information appear on hover.", 
      "dflt": "all", 
      "extras": [
        "all", 
        "none"
      ], 
      "role": "info", 
      "flags": [
        "location", 
        "z", 
        "text", 
        "name"
      ], 
      "valType": "flaglist"
    }, 
    "geo": {
      "valType": "subplotid", 
      "role": "info", 
      "description": "Sets a reference between this trace's geospatial coordinates and a geographic map. If *geo* (the default value), the geospatial coordinates refer to `layout.geo`. If *geo2*, the geospatial coordinates refer to `layout.geo2`, and so on.", 
      "dflt": "geo"
    }, 
    "zauto": {
      "valType": "boolean", 
      "role": "info", 
      "description": "Determines the whether or not the color domain is computed with respect to the input data.", 
      "dflt": true
    }, 
    "name": {
      "valType": "string", 
      "role": "info", 
      "description": "Sets the trace name. The trace name appear as the legend item and on hover."
    }, 
    "colorscale": {
      "valType": "colorscale", 
      "role": "style", 
      "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax"
    }, 
    "reversescale": {
      "valType": "boolean", 
      "role": "style", 
      "description": "Reverses the colorscale.", 
      "dflt": false
    }, 
    "z": {
      "valType": "data_array", 
      "role": "data", 
      "description": "Sets the color values."
    }, 
    "locationmode": {
      "values": [
        "ISO-3", 
        "USA-states", 
        "country names"
      ], 
      "valType": "enumerated", 
      "role": "info", 
      "description": "Determines the set of locations used to match entries in `locations` to regions on the map.", 
      "dflt": "ISO-3"
    }
  }, 
  "description": "The data that describes the choropleth value-to-color mapping is set in `z`. The geographic locations corresponding to each value in `z` are set in `locations`."
}